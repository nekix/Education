Относится ко всем решениям:
Cтоит пересмотреть свой стиль
оформления SQL запросов для повышения
читаемости.

/*
Exercise 1
*/

Необходимо ограничить перечень
выводимых параметров (SELECT).

/*
Exercise 2
*/

Необходимо ограничить перечень
выводимых параметров (SELECT).

/*
Exercise 3
*/

Необходимо ограничить перечень
выводимых параметров (SELECT).
Читаемость в подзапросе без переменной t
получается лучше чем с ним.

/*
Exercise 4
*/

Необходимо ограничить перечень
выводимых параметров (SELECT).
Мой вариант запроса потенциально
быстре (т.к. меньше параметров GROUP BY),
но это при предположении, что dwarf_id уникальное
поле. Если это не так, то он приведет к некорректному
выводу при попавших в выборку нескольких Dwarves 
с одинаковым dwarf_id.

/*
Exercise 5
*/

Необходимо ограничить перечень
выводимых параметров (SELECT).
Мой вариант запроса потенциально
быстре (т.к. меньше параметров GROUP BY),
но это при предположении, что dwarf_id уникальное
поле. Если это не так, то он приведет к некорректному
выводу при попавших в выборку нескольких Squad 
с одинаковым squad_id.

/*
Exercise 6
*/

Я понял задание не совсем верно, посчитав,
что необходимо получить список профессий
ТОЛЬКО с наибольшим кол-вом незавершенных задач
у соответсвующих гномов. Если бы я понял правильно, то
в моем решение вместо HAVING COUNT было бы ORDER BY,
аналогичное эталонному.
Также различается применении филтрации
(у меня в JOIN ON, в эталонном в WHERE),
различий в производительности не вижу,
только в читаемости не в мою пользу).
Мне кажется моя реализация универсальнее,
т.к. позволяет учитывать любые статусы,
кроме завершенного (не сломается запрос при
добавлении нового статуса).

Также я довольно надолго застраял над обдумыванием
этого задания, необходимо лучше проработать тему
GROUP BY и HAVING.

/*
Exercise 7
*/

Эталонное название AverageAge
лучше отражает суть среднего возраста
чем мое age.

/*
Exercise 8
*/

Необходимо ограничить перечень
выводимых параметров (SELECT).
В моем случае мне кажется запрос будет
работать быстрее за счёт одного подзапроса
вместо двух.