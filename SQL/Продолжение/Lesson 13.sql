/*

При подсчёте total_battles опечатался, и считал COUNT(squad_id) вместо COUNT(report_id)

victories. Не знал, что внутри функций агрегации можно использовать CASE. Вместо этого использовал LEFT JOIN.

Для current_members также использовать LEFT JOIN вместо CASE в агрегации.

Для total_members_ever не использовал DISTINCT в COUNT, что привело к засчитыванию дублей, что было ошибкой.

avg_equipment_quality мне кажется я правильнее посчитал чем в эталонном решении, потому что учитывал ещё и кол-во снаряжения из таблицы squad_equipment.

В total_training_sessions считал COUNT(squad_id) вместо COUNT(schedule_id), что было ошибкой.

Расчёт training_battle_correlation у меня был реализован с ошибками. Подготовка расчётных данных находилась в CTE training_battle_by_date, в котором не добавлены для моего способа расчёта нужные группировки. Также я добавил бесполезный COUNT(tsi.squad_id). В эталонном решении также используется CASE внутри CORR. Тяжело такое пока понять аналитически и запомнить без жкспериментов и практики, поэтому буду пробовать на тестовых табличках.

Для overall_effectiveness_score не использовал avg_combat_skill_improvement уаазанный в эталонном решении, но включил training_battle_correlation, посчитав что высокая корреляция может свидетельствовать об эффективном использовании отряда.

В целом, в финальном запросе не указывал типы данных при делении, хотя там были слева и справа целые числа и у нас по идее из-за этого отбросилась дробная часть, что неверно. Нужно как в эталонном решение хотя бы одному (делимому или частному) указать тип данных с плавающей запятой.

Моя компоновка расчётов по CTE в этот раз понравилась мне больше чем то, что я сделал в прошлом задании, но всё равно по сравнению с эталонным решением видно, что можно было лучше. Чувствую что все равно тяжело держать весь контекст объёмной задачи одновременно в голове. В этот раз декомпозиция задачи и последующая композиция решения у меня прошли быстрее. Основная сложность именно в комплексных параметрах и необходимости проектировать CTE так, чтобы и более простые показатели вытащить, и вписать туда расчёт сложных. Ну и работу с агрегациями, группировками ещё бы подтянуть.

*/